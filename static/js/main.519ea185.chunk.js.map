{"version":3,"sources":["components/TodoForm.js","components/Todo.js","components/TodoList.js","App.js","index.js"],"names":["TodoForm","props","useState","edit","value","input","setInput","inputRef","useRef","useEffect","current","focus","handleChange","e","target","handleSubmit","preventDefault","onSubmit","id","replace","c","r","Math","random","toString","text","className","placeholder","onChange","name","ref","onClick","Todo","todos","completeTodo","removeTodo","updateTodo","setEdit","map","todo","index","isComplete","key","TodoList","setTodos","test","newTodos","console","log","updatedTodos","removeArr","filter","todoId","newValue","prev","item","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.519ea185.chunk.js","sourcesContent":["//try https://usehooks.com/useKeyPress/ to delete entres with 'c', for example?\r\n\r\nimport React, { useState, useEffect, useRef } from 'react'\r\n\r\nfunction uuidv4() {\r\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\r\n    var r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);\r\n    return v.toString(16);\r\n  });\r\n}\r\n\r\nfunction TodoForm(props) {\r\n  const [input, setInput] = useState(props.edit ? props.edit.value : '')\r\n\r\n  const inputRef = useRef(null)\r\n  useEffect(() => {\r\n  inputRef.current.focus()\r\n})\r\n\r\n  const handleChange = e => {\r\n    setInput(e.target.value)\r\n  }\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    props.onSubmit({\r\n      id: uuidv4(),\r\n      text: input\r\n    })\r\n\r\n    setInput('')\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} className='todo-form'>\r\n      {props.edit ? (\r\n        <>\r\n          <input\r\n            placeholder='Update your item'\r\n            value={input}\r\n            onChange={handleChange}\r\n            name='text'\r\n            ref={inputRef}\r\n            className='todo-input edit'\r\n          />\r\n          <button onClick={handleSubmit} className='todo-button edit'>\r\n            Update\r\n          </button>\r\n        </>\r\n      ) : (\r\n        <>\r\n          <input\r\n            placeholder='Add a todo'\r\n            value={input}\r\n            onChange={handleChange}\r\n            name='text'\r\n            className='todo-input'\r\n            ref={inputRef}\r\n          />\r\n          <button onClick={handleSubmit} className='todo-button'>\r\n            Add todo\r\n          </button>\r\n        </>\r\n      )}\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default TodoForm;\r\n","import React, {useState} from 'react'\r\nimport TodoForm from './TodoForm'\r\nimport { RiCloseCircleLine } from 'react-icons/ri'\r\nimport { TiEdit } from 'react-icons/ti'\r\n\r\nfunction Todo({todos, completeTodo, removeTodo, updateTodo}) {\r\n  const [edit, setEdit] = useState({\r\n    id: null,\r\n    value: ''\r\n  })\r\n\r\n  const submitUpdate = value => {\r\n    updateTodo(edit.id, value)\r\n    setEdit({\r\n      id: null,\r\n      value: ''\r\n    })\r\n  }\r\n\r\n  if (edit.id) {\r\n    return <TodoForm edit={edit} onSubmit={submitUpdate} />\r\n  }\r\n\r\n  return todos.map((todo, index) => (\r\n    <div \r\n      className={todo.isComplete ? 'todo-row complete' : 'todo-row'} \r\n      key = {index}\r\n    >\r\n      <div key={todo.id} onClick={() => completeTodo(todo.id)}>\r\n        {todo.text}\r\n      </div>\r\n      <div className=\"icons\">\r\n        {/* https://react-icons.github.io/react-icons/ */}\r\n        <RiCloseCircleLine \r\n          onClick={() => removeTodo(todo.id)}\r\n          className='delete-icon'\r\n        />\r\n        <TiEdit\r\n          onClick={() => setEdit({id: todo.id, value: todo.text})}\r\n          className='edit-icon'\r\n        />\r\n      </div>\r\n    </div>\r\n  ))\r\n}\r\n\r\nexport default Todo\r\n","import React, {useState} from 'react'\r\nimport Todo from './Todo'\r\nimport TodoForm from './TodoForm'\r\n\r\nfunction TodoList() {\r\n  const [todos, setTodos] = useState([])\r\n\r\n  const addTodo = todo => {\r\n    if(!todo.text || /^\\s*$/.test(todo.text)) {\r\n      return\r\n    }\r\n\r\n    const newTodos = [todo, ...todos]\r\n    setTodos(newTodos)\r\n    console.log(todo, ...todos)\r\n  }\r\n\r\n  const updateTodo = (todoId, newValue) => {\r\n    if(!newValue.text || /^\\s*$/.test(newValue.text)) {\r\n      return\r\n    }\r\n    setTodos(prev => prev.map(item => (item.id === todoId ? newValue : item)))\r\n  }\r\n\r\n  const removeTodo = id => {\r\n    const removeArr = [...todos].filter(todo => todo.id !== id)\r\n    setTodos(removeArr)\r\n  }\r\n\r\n  const completeTodo = id => {\r\n    let updatedTodos = todos.map(todo => {\r\n      if (todo.id === id) {\r\n        todo.isComplete = !todo.isComplete\r\n      }\r\n      return todo\r\n    })\r\n    setTodos(updatedTodos)\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1>What's the plan for today?</h1>\r\n      <TodoForm onSubmit={addTodo}/>\r\n      <Todo \r\n        todos={todos}\r\n        completeTodo={completeTodo}\r\n        removeTodo={removeTodo}\r\n        updateTodo={updateTodo}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default TodoList\r\n","import React from 'react';\nimport './App.css';\nimport TodoList from './components/TodoList';\n\nfunction App() {\n  return (\n    <div className=\"todo-app\">\n      <TodoList/>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}